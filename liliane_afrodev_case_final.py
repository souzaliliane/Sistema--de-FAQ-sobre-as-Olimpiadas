# -*- coding: utf-8 -*-
"""Liliane Afrodev Case final.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1mTpBnhpnlPkb2DiR593ApUicxj9bqeX2
"""

import pandas as pd

import openpyxl

def leiaint(msg):
    while True:
        try:
            n = int(input(msg))
        except (ValueError, TypeError):
            print('033[31mERRO: Digite um número inteiro válido! \033[m')
            continue
        except(keyboardInterrupt):
            print(' Nada foi digitado')
            return 0
        else:
            return n


def lin(tam=42):
    return '-' * tam


def cab(txt):
    print(lin())
    print(txt.center(42))
    print(lin())


def menu(lista):
    cab('MENU')
    c = 1
    for item in lista:
        print(f'\033[33m{c}\033 - \033[34m{item}\33[m')
        c += 1
    print(lin())
    opc = leiaint('\033[32mSua Opção:\033[m')
    return opc


df1 = pd.read_excel('/content/Athletes.xlsx')
df2 = pd.read_excel('/content/Coaches.xlsx')
df3 = pd.read_excel('/content/EntriesGender.xlsx')
df4 = pd.read_excel('/content/Medals.xlsx')
df5 = pd.read_excel('/content/Teams.xlsx')

# Total de Atetlas Participantes
totPart = df1.shape[0]

# Total de participantes Homens
tH = df3['Male'].sum()
# Total de Participantes Mulheres
tM = df3['Female'].sum()
# Total por esporte
te = df5.groupby(by='Discipline').size()
# Total de medalhas por País
# df4 <<
tmp = df4['Total de Medalhas'] = df4['Gold'] + df4['Silver'] + df4['Bronze']

# Rank de Medalhas
rank = df4[['Rank', 'Team/NOC', 'Total de Medalhas']]
# Pais com mais Medalhas de Ouro
pmo = df4[['Team/NOC', 'Gold']].head(1).max
# Pais com mais Medalhas de Prata
pmp = df4[['Team/NOC', 'Silver']].head(1).max
# Pais com mais Medalhas de Bronze
pmb = df4[['Team/NOC', 'Bronze']].head(1).max
# Pais com menos Medalhas de ouro


cab(' Sistema de FAQ das Olímpiadas!')
cab('Digite uma das opções do Menu')
while True:
    resposta = menu (['Total de Atletas Participantes ', 'Total de Participantes Homens', 'Total de Participantes Mulheres',
              'Total de Participantes por Esporte',
              'Total de medalhas por País', 'Ranking de Medalhas', 'País com mais Ouro', 'País com Mais Prata',
              'Pais com mais Bronze', 'País com menos ouro',
              'País com menos Prata', 'País com menos Bronze', 'Listas de esportes participantes',
              'Esportes com mais homens', 'Esportes com mais Mulheres',
              'Quantidade de terinadores por País', 'País com mais treinadores',
              'Quantidade de treinadores por esporte', 'Times por esporte cada País', 'Sair' ])
    if resposta ==1:
        cab(f'O Total de Participantes  {totPart}')
        #display (totPart)
    elif resposta == 2:
        cab(f'Total de Participantes Homens:{tH} ')
    elif resposta == 3:
        cab(f'Total de Participantes Mulheres:{tM} ')
    elif resposta == 4:
        cab(f'Total por Esportes:\n {te} ')
    elif resposta == 5:
        cab(f'Total de Medalhas por País:\n {df4} ')
    elif resposta == 6:
        cab(f'RANK de Medalhas:\n {rank} ')
    elif resposta == 7:
        cab(f'País com Mais Medalhas de Ouro:\n {pmo} ')
    elif resposta == 8:
        cab(f'País com mais  Medalhas de Prata :\n {pmp} ')
    elif resposta == 9:
        cab(f'País com mais  Medalhas de Bronze:\n {pmb} ')
    elif resposta == 10:
        cab(f'País com menos  Medalhas de Ouro:\n  ')
    elif resposta == 11:
        cab(f'País com menos  Medalhas de Prata:\n  ')
    elif resposta == 12:
        cab(f'País com menos  Medalhas de Bronze:\n  ')
    elif resposta == 13:
        cab(f'ESPORTES PARTICIPANTES \n ')
    elif resposta == 14:
        cab(f'ESPORTES COM MAIS HOMENS\n  ')
    elif resposta == 15:
        cab(f'ESPORTES COM MAIS MULHERES\n  ')
    elif resposta == 16:
        cab(f'QUANTIDADE DE TREINADORES POR PAÍS \n ')
    elif resposta == 17:
        cab(f'PAÍS COM MAIS TREINADORES:  ')
    elif resposta == 18:
        cab(f'QUANTIDADE DE TREINADORES POR ESPORTE \n  ')
    elif resposta == 19:
        cab(f'TIMES POR ESPORTE E PAÍS \n  ')
    elif resposta == 20:
        cab('Você escolheu sair do sistema!')
        break
    else:
         cab('OPÇÃO INVÁLIDA!')

display (df4)

from google.colab import drive
drive.mount('/content/drive')